/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddressBookHomeFrame.java
 *
 * Created on Feb 3, 2011, 9:53:23 AM
 */
package abook.gui;

import abook.db.JDBCUtil;
import abook.pojo.Friend;
import abook.service.ABService;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pankaj Sharma
 */
public class AddressBookHomeFrame extends javax.swing.JFrame {

    ABService service = new ABService();
    MyTableModel myTableModel;

    /** Creates new form AddressBookHomeFrame */
    public AddressBookHomeFrame() {
        initComponents();
        setLocationRelativeTo(null);
        myTableModel = new MyTableModel();
        tableFriends.setModel(myTableModel);


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        tfSearch = new javax.swing.JTextField();
        btnViewAll = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFriends = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        miAddFriend = new javax.swing.JMenuItem();
        miLogout = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        miExit = new javax.swing.JMenuItem();
        menuSettings = new javax.swing.JMenu();
        menuHelp = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Address Book Home");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/abook/gui/homepage_icon_2.jpg"))); // NOI18N
        jLabel1.setText("Address Book System");

        btnAdd.setText("Add ");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tfSearch.setText("Search");
        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfSearchKeyReleased(evt);
            }
        });

        btnViewAll.setText("View All");
        btnViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnDelete)
                .addGap(0, 0, 0)
                .addComponent(btnViewAll, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnViewAll)))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tableFriends.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableFriends);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 542, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );

        menuFile.setText("File");

        miAddFriend.setText("Add Friend");
        menuFile.add(miAddFriend);

        miLogout.setText("Logout");
        menuFile.add(miLogout);
        menuFile.add(jSeparator1);

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        menuFile.add(miExit);

        jMenuBar1.add(menuFile);

        menuSettings.setText("Settings");
        jMenuBar1.add(menuSettings);

        menuHelp.setText("Help");
        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        closeApplication();
    }//GEN-LAST:event_miExitActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            int rowCount = tableFriends.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                Boolean isChecked = (Boolean) myTableModel.getValueAt(i, 0); //first column value
                if (isChecked) {
                    Integer fid = (Integer) myTableModel.getValueAt(i, 1); //FriendID column value
                    service.deleteFriend(fid);
                }
            }
            deleteAllRowsFromModel();
            fetchAllFriend();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to delete selected record(s)");
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllActionPerformed
        // TODO add your handling code here:

        try {
            deleteAllRowsFromModel();
            fetchAllFriend();
        } catch (Exception ex) {
           ex.printStackTrace();
        }
    }//GEN-LAST:event_btnViewAllActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
       //last parameter : false: add new; true : update
        FriendFormDialog ffd=new FriendFormDialog(this, true,false,null);
        ffd.setVisible(true);
        //update model
        deleteAllRowsFromModel();
        try {
            fetchAllFriend();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            //last parameter : false: add new; true : update
            int selectedRowIndex = tableFriends.getSelectedRow();
            Integer selectedFriendId = (Integer) myTableModel.getValueAt(selectedRowIndex, 1);
            Friend f = service.getFriendById(selectedFriendId);
            FriendFormDialog ffd = new FriendFormDialog(this, true, true, f);
            ffd.setVisible(true);
            deleteAllRowsFromModel();
            fetchAllFriend();
        } catch (Exception ex) {
            
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tfSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyReleased
       //10: enter key
        if(evt.getKeyCode()!=10){
            return;
        }

        try {
           search();
        } catch (Exception ex) {
           ex.printStackTrace();
        }
        

    }//GEN-LAST:event_tfSearchKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnViewAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenu menuSettings;
    private javax.swing.JMenuItem miAddFriend;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miLogout;
    private javax.swing.JTable tableFriends;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables

    private void closeApplication() {
        //close connection
        JDBCUtil.closeConnection();
        System.exit(0);//stop the JVM
    }

    private void deleteAllRowsFromModel() {
        int rowCount = tableFriends.getRowCount();
        if (rowCount >= 1) {
            myTableModel.removeRow(rowCount - 1);
            deleteAllRowsFromModel();//recursion
        } else {
            return;
        }
    }

    private void search() throws Exception {
        deleteAllRowsFromModel();
        String key=tfSearch.getText();
        Vector<Vector> data = service.search(key,LoginForm.loggedInUser.getUserId());
        
        for (Vector row : data) {
            myTableModel.addRow(row);
        }
    }
    // End of variables declaration

    //inner class
    //Table Model
    class MyTableModel extends DefaultTableModel {

        Vector header;
        Vector<Vector> data;

        public MyTableModel() {
            header = new Vector();
            header.add("SELECT");
            header.add("ID");
            header.add("NAME");
            header.add("PHONE");
            header.add("EMAIL");
            header.add("ADDRESS");

            int userId = LoginForm.loggedInUser.getUserId();
            try {
                data = service.getAllFriends(userId);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            //set data and columns or header to the table model
            setDataVector(data, header);
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            if (column == 0) {
                return true;
            }
            return false;
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {

            if (columnIndex == 0) {
                return Boolean.class;
            }


            return super.getColumnClass(columnIndex);
        }
    }//end inner class

    public void fetchAllFriend() throws Exception {
        Vector<Vector> data = service.getAllFriends(LoginForm.loggedInUser.getUserId());
        for (Vector row : data) {
            myTableModel.addRow(row);
        }
    }
}
